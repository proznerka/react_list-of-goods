{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","state","goods","isVisible","isReversed","sortBy","none","start","setState","reversed","sortAlphabetically","name","sortByLength","length","reset","this","sortedGoods","sort","g1","g2","localeCompare","reverse","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,kFAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAaE,IAAME,EAAb,4MACEC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,WAAW,EACXC,YAAY,EACZC,OAAQP,EAAOQ,MALnB,EAQEC,MAAQ,kBACN,EAAKC,SAAS,CAAEL,WAAW,KAT/B,EAYEM,SAAW,WACT,EAAKD,UAAS,SAACP,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBAdzB,EAkBEM,mBAAqB,WACnB,EAAKF,SAAS,CACZH,OAAQP,EAAOa,QApBrB,EAwBEC,aAAe,WACb,EAAKJ,SAAS,CACZH,OAAQP,EAAOe,UA1BrB,EA8BEC,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,OAAQP,EAAOQ,QAjCrB,4CAqCE,WACE,MAKIS,KAAKd,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAGEW,EAAW,YAAOd,GAEtB,OAAQG,GACN,KAAKP,EAAOa,KACVK,EAAYC,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGE,cAAcD,MAC/C,MAEF,KAAKrB,EAAOe,OACVG,EAAYC,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGL,OAASM,EAAGN,UAC7C,MAEF,QACEG,EAAW,YAAOd,GAOtB,OAJIE,GACFY,EAAYK,UAIZ,gCACE,wCACElB,GACA,wBACEmB,KAAK,SACLC,QAASR,KAAKR,MAFhB,mBAQDJ,GACC,gCACE,wBACEmB,KAAK,SACLC,QAASR,KAAKN,SAFhB,qBAOA,wBACEa,KAAK,SACLC,QAASR,KAAKL,mBAFhB,iCAOA,wBACEY,KAAK,SACLC,QAASR,KAAKD,MAFhB,mBAOA,wBACEQ,KAAK,SACLC,QAASR,KAAKH,aAFhB,+BASHT,GACC,6BACGa,EAAYQ,KAAI,SAACC,GAAD,OACf,6BACGA,gBAhHjB,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6517a825.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\ntype State = {\n  goods: string[];\n  isVisible: boolean;\n  isReversed: boolean;\n  sortBy: SortBy;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    isVisible: false,\n    isReversed: false,\n    sortBy: SortBy.none,\n  };\n\n  start = () => (\n    this.setState({ isVisible: true })\n  );\n\n  reversed = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortBy.name,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortBy.length,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortBy.none,\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      isVisible,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    let sortedGoods = [...goods];\n\n    switch (sortBy) {\n      case SortBy.name:\n        sortedGoods.sort((g1, g2) => (g1.localeCompare(g2)));\n        break;\n\n      case SortBy.length:\n        sortedGoods.sort((g1, g2) => (g1.length - g2.length));\n        break;\n\n      default:\n        sortedGoods = [...goods];\n    }\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    return (\n      <div>\n        <h1>Goods</h1>\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.start}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <div>\n            <button\n              type=\"button\"\n              onClick={this.reversed}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n          </div>\n        )}\n\n        {isVisible && (\n          <ul>\n            {sortedGoods.map((good) => (\n              <li>\n                {good}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}